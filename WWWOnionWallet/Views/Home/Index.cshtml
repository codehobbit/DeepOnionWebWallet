@model WWWOnionWallet.Models.IndexModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>DeepOnion Web Wallet</title>
    <link href="https://fonts.googleapis.com/css?family=Roboto:400,300,100,500,700,900" rel="stylesheet" type="text/css">
    <link href="~/assets/css/icons/icomoon/styles.css" rel="stylesheet" type="text/css">
    <link href="~/assets/css/bootstrap.css" rel="stylesheet" type="text/css">
    <link href="~/assets/css/core.css" rel="stylesheet" type="text/css">
    <link href="~/assets/css/components.css" rel="stylesheet" type="text/css">
    <link href="~/assets/css/colors.css" rel="stylesheet" type="text/css">
    <script type="text/javascript" src="~/assets/js/core/libraries/jquery.min.js"></script>
    <script type="text/javascript" src="~/assets/js/core/libraries/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/assets/js/plugins/forms/styling/uniform.min.js"></script>
    <script type="text/javascript" src="~/assets/js/core/app.js"></script>
    <script type="text/javascript" src="~/assets/js/pages/login.js"></script>
</head>
<body class="login-container login-cover">
    <div class="page-container pb-20">
        <div class="page-content">
            <div class="content-wrapper">
                <div class="tabbable panel login-form width-400">
                    <ul class="nav nav-tabs nav-justified">
                        <li class="@(TempData["Register"] == null ? "active" : "")"><a href="#basic-tab1" data-toggle="tab"><h6>Sign in</h6></a></li>
                        <li class="@(TempData["Register"] != null ? "active" : "")"><a href="#basic-tab2" data-toggle="tab"><h6>Register</h6></a></li>
                    </ul>
                    <div class="tab-content panel-body">
                        @if (TempData["SuccessMessage"] != null)
                        {
                            <div class="alert alert-success" role="alert">
                                @TempData["SuccessMessage"].ToString()
                            </div>
                        }
                        @if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-warning" role="alert">
                                @TempData["ErrorMessage"].ToString()
                            </div>
                        }
                        <div class="tab-pane fade @(TempData["Register"] == null ? "in active" : "")" id="basic-tab1">
                            @using (Html.BeginForm("Login", "Home"))
                            {
                                <div class="text-center">
                                    <img src="~/assets/images/deeponion_logo.png" />
                                    <h5 class="content-group">Meet your Onions <small class="display-block">Enter credentials</small></h5>
                                </div>
                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.EditorFor(model => model.LoginEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "Email", required = "required" } })
                                    <div class="form-control-feedback">
                                        <i class="icon-mail5 text-muted"></i>
                                    </div>
                                </div>
                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.EditorFor(model => model.LoginPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Password", required = "required" } })
                                    <div class="form-control-feedback">
                                        <i class="icon-question3 text-muted"></i>
                                    </div>
                                </div>
                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.EditorFor(model => model.TwoFactorAuthentication, new { htmlAttributes = new { @class = "form-control", placeholder = "2FA (optional)" } })
                                    <div class="form-control-feedback">
                                        <i class="icon-key text-muted"></i>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <button type="submit" class="btn bg-blue btn-block">Enter the party <i class="icon-arrow-right14 position-right"></i></button>
                                </div>
                            }
                            <span class="help-block text-center no-margin">By continuing, you're confirming that you've read our <a href="@Url.Action("TermsOfService", "Home")" target="_blank">Terms of Service</a> and <a href="@Url.Action("PrivacyPolicy", "Home")" target="_blank">Privacy Policy</a></span>
                        </div>
                        <div class="tab-pane fade @(TempData["Register"] != null ? "in active" : "")" id="basic-tab2">
                            @using (Html.BeginForm("Register", "Home"))
                            {
                                <div class="text-center">
                                    <div class="icon-object border-success text-success"><i class="icon-plus3"></i></div>
                                    <h5 class="content-group">Join the Onion World <small class="display-block">All fields are required</small></h5>
                                </div>
                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.EditorFor(model => model.RegisterEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "Email", required = "required" } })
                                    <div class="form-control-feedback">
                                        <i class="icon-mention text-muted"></i>
                                    </div>
                                </div>
                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.EditorFor(model => model.RegisterPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Create password", required = "required" } })
                                    <div class="form-control-feedback">
                                        <i class="icon-user-lock text-muted"></i>
                                    </div>
                                </div>
                                <div class="form-group has-feedback has-feedback-left">
                                    @Html.EditorFor(model => model.RegisterRepeatPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Retype password", required = "required" } })
                                    <div class="form-control-feedback">
                                        <i class="icon-user-lock text-muted"></i>
                                    </div>
                                </div>
                                <div class="content-text-muted form-group"><span>Additions</span></div>
                                <div class="form-group">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(model => model.RegisterIsMailing, new { @class = "styled" })
                                            Receive mails (Web Wallet related, promise!)
                                        </label>
                                    </div>
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(model => model.RegisterAcceptTOS, new { @class = "styled" })
                                            Accept <a href="@Url.Action("TermsOfService", "Home")" target="_blank">Terms of Service</a> and <a href="@Url.Action("PrivacyPolicy", "Home")" target="_blank">Privacy Policy</a>
                                        </label>
                                    </div>
                                </div>
                                <button type="submit" class="btn bg-blue btn-block">Join the party <i class="icon-circle-right2 position-right"></i></button>
                            }
                        </div>
                        <span class="help-block text-center no-margin mt-10">OnionWallet.ch is a 3rd party wallet.</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>